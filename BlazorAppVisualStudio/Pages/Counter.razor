@page "/counter/{currentCounterParameter?}"
@inject ILogger<Counter> logger;


<PageTitle>Counter</PageTitle>

<ModuleTitle Title="Counter" />

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    [Parameter]
    public string? currentCounterParameter { get; set; }

    [SupplyParameterFromQuery]
    [Parameter]
    public string? CounterFromQuery { get; set; }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        if(parameters.TryGetValue<string>(nameof(currentCounterParameter), out var value))
        {
            if(value is not null)
            {
                currentCounterParameter = value;
            }
        }
        return base.SetParametersAsync(parameters);
    }

    protected override void OnParametersSet()
    {
        logger.LogInformation("Se envian los parametros.");
    }

    protected override void OnInitialized()
    {
        /* 
        currentCount = currentCounterParameter != null
            ? int.Parse(currentCounterParameter)
            : 0;
        */
        currentCount = CounterFromQuery != null
             ? int.Parse(CounterFromQuery)
             : 0;
        logger.LogInformation("Se inicia el componente");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        logger.LogInformation("Esto ocurre despues de iniciar el componente.");
    }

    private void IncrementCount()
    {
        currentCount++;
    } 
}
